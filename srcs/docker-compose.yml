name: ft_transcendence


services:
  r_proxy:
    container_name: r_proxy
    restart: on-failure
    build:
        context: ./reverse_proxy
        dockerfile: Dockerfile
    ports:
        - 443:443
    networks:
      - router

  api_gateway:
    container_name: api_gateway
    restart: on-failure
    volumes:
      - ./back/api_gateway/asset/srcs:/usr/src/api_gateway/asset/srcs
    environment:
      DATABASE_URL: ${DATABASE_URL:?}
      NODE_ENV: ${NODE_ENV:-production}
    build:
        context: ./back/api_gateway
        dockerfile: Dockerfile
        args:
          NODE_ENV: ${NODE_ENV:-production}
    ports:
      - 5555:5555
    expose:
      - 3000
    networks:
      - router
      - services

  chat-service:
    container_name: chat-service
    restart: on-failure
    volumes:
      - ./back/chat-service/asset/srcs:/usr/src/chat-service/asset/srcs
    environment:
      NODE_ENV: ${NODE_ENV:-production}
    build:
        context: ./back/chat-service
        dockerfile: Dockerfile
        args:
          NODE_ENV: ${NODE_ENV:-production}
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - services


  front_dev:
    container_name: front_dev
    restart: on-failure
    build:
        context: ./front/
        dockerfile: Dockerfile
    expose:
      - 5173
    volumes:
      - data-front:/var/www/html
    networks:
      - router

volumes:
  data-front:
    name: data-front
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./front/vitejs

networks:
  services:
    driver: bridge
  router:
    driver: bridge